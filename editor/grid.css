/* --------------------------------------------------------------

   grid.css
   * Sets up an easy-to-use grid of 24 columns.

   By default, the grid is 950px wide, with 24 columns
   spanning 30px, and a 10px margin between columns.

   If you need fewer or more columns, namespaces or semantic
   element names, use the compressor script (lib/compress.rb)

-------------------------------------------------------------- */

/* A container should group all your columns. */
.container {
  width: {{ page_width }}px;
  margin: 0 auto;
}

/* Use this class on any .span / container to see the grid. */
.showgrid {
  background: url(src/grid.png);
}


/* Columns
-------------------------------------------------------------- */

/* Sets up basic grid floating and margin. */
.column, {{ span_list }} {
  float: left;
  margin-right: {{ gutter_width }}px;
}

/* The last column in a row needs this class. */
.last { margin-right: 0; }

/* Use these classes to set the width of a column. */
.span-1 {width: {{ column_width }}px;}
{% for column in span_range %}
.span-{{ column.number }} {width: {{ column.width }}px;{% ifequal column column_count %}margin-right: 0; {% endifequal %}}{% endfor %}
.span-{{ column_count }} {width:{{ page_width }}px; margin-right:0;}

/* Use these classes to set the width of an input. */
{{ input_list }} {
  border-left-width: {{ input_border }}px;
  border-right-width: {{ input_border }}px;
  padding-left: {{ input_padding }}px;
  padding-right: {{ input_padding }}px;
}
{% for column in input_range %}
input.span-{{ forloop.counter }}, textarea.span-{{ forloop.counter }} { width: {{ column }}px; }{% endfor %}

/* Add these to a column to append empty cols. */
{% for padding_right in append_prepend %}
.append-{{ forloop.counter }} { padding-right: {{ padding_right }}px;}{% endfor %}

/* Add these to a column to prepend empty cols. */
{% for padding_left in append_prepend %}
.prepend-{{ forloop.counter }} { padding-left: {{ padding_left }}px;}{% endfor %}


/* Border on right hand side of a column. */
.border {
  padding-right: {{ border_padding }}px;
  margin-right: {{ border_margin }}px;
  border-right: 1px solid #ddd;
}

/* Border with more whitespace, spans one column. */
.colborder {
  padding-right: {{ colborder_padding }}px;
  margin-right: {{ colborder_margin }}px;
  border-right: 1px solid #ddd;
}


/* Use these classes on an element to push it into the
next column, or to pull it into the previous column.  */

{% for pull_margin in pull_push_range %}
.pull-{{ forloop.counter }} { margin-left: -{{ pull_margin }}px; }{% endfor %}

{{ pull_list }} {float: left; position:relative;}

{% for push_margin in pull_push_range %}
.push-{{ forloop.counter }} { margin: 0 -{{ push_margin }}px 1.5em {{ push_margin }}px; }{% endfor %}

{{ push_list }} {float: left; position:relative;}


/* Misc classes and elements
-------------------------------------------------------------- */

/* In case you need to add a gutter above/below an element */
div.prepend-top, .prepend-top {
  margin-top:1.5em;
}
div.append-bottom, .append-bottom {
  margin-bottom:1.5em;
}

/* Use a .box to create a padded box inside a column.  */
.box {
  padding: 1.5em;
  margin-bottom: 1.5em;
  background: #e5eCf9;
}

/* Use this to create a horizontal ruler across a column. */
hr {
  background: #ddd;
  color: #ddd;
  clear: both;
  float: none;
  width: 100%;
  height: 1px;
  margin: 0 0 17px;
  border: none;
}

hr.space {
  background: #fff;
  color: #fff;
  visibility: hidden;
}


/* Clearing floats without extra markup
   Based on How To Clear Floats Without Structural Markup by PiE
   [http://www.positioniseverything.net/easyclearing.html] */

.clearfix:after, .container:after {
  content: "\0020";
  display: block;
  height: 0;
  clear: both;
  visibility: hidden;
  overflow:hidden;
}
.clearfix, .container {display: block;}

/* Regular clearing
   apply to column that should drop below previous ones. */

.clear { clear:both; }
